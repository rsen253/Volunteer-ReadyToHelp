@model Volunteers_ReadyToHelp.ViewModels.RegistrationViewModel
<div class="container signUp">
    <div class="row">
        <div class="col-md-6 col-md-offset-2 text-center">

          
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
    
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group" id="DateOfBirth">
                        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8 text-left">
                            @Html.DropDownListFor(model => model.CountryId, @ViewBag.CountryID as SelectList, "Select Country", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8 text-left">
                            @Html.DropDownListFor(model => model.StateId, @ViewBag.StateID as SelectList, "Select State", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.RoleType, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8 text-left">
                            Individual:   @Html.RadioButtonFor(model => model.RoleType, "Individual", new { id = "Individual" })
                            Organization: @Html.RadioButtonFor(model => model.RoleType, "Organization", new { id = "Organization" })
                            @Html.ValidationMessageFor(model => model.RoleType, "", new { @class = "text-danger" })
                        </div>
                    </div>                   
                    <div id="hidden" style="display:none">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AboutOrganization, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.AboutOrganization, new { @class = "form-control", rows = "10" } )
                                @Html.ValidationMessageFor(model => model.AboutOrganization, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class= "control-label col-md-4">Established On</label>
                            <div class="col-md-8">
                                <select name="establishedOn" class="form-control">
                                    <option value="1990">1990</option>
                                    <option value="1991">1991</option>
                                    <option value="1992">1992</option>
                                    <option value="1993">1993</option>
                                    <option value="1994">1994</option>
                                    <option value="1995">1995</option>
                                    <option value="1996">1996</option>
                                    <option value="1997">1997</option>
                                    <option value="1998">1998</option>
                                    <option value="1999">1999</option>
                                    <option value="2000">2000</option>
                                    <option value="2001">2001</option>
                                    <option value="2002">2002</option>
                                    <option value="2003">2003</option>
                                    <option value="2004">2004</option>
                                    <option value="2005">2005</option>
                                    <option value="2006">2006</option>
                                    <option value="2007">2007</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="file" class="col-md-4">Upload Image:</label>
                        <div class="col-md-6">
                            <input type="file" name="userImage" id="userImage" />
                            <p class="help-block text-danger">Image should not be more than 5 MB</p>
                            <div class="col-md-2 text-danger">@ViewBag.InvalidImage</div>
                        </div>
                    </div>

                    <div class="form-group">
                        @{
                            var reCAPTCHApublicKey = System.Configuration.ConfigurationManager.AppSettings["reCaptchaPublicKey"];
                        
                        <div class="g-recaptcha col-md-5 col-md-offset-4" data-sitekey="@reCAPTCHApublicKey" >
                        </div>
                        <div class="col-md-3 text-danger">@ViewBag.reCAPTCHA</div>
                        }
                    </div>
                    
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <input type="submit" value="Sign up" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src='https://www.google.com/recaptcha/api.js'></script>
    <script src="https://cdn.ckeditor.com/4.5.10/standard/ckeditor.js"></script>
    <script type="text/javascript">
        $(function () {
            $('#Organization').click(function () {
                $("#hidden").css("display", "block");
                $("#DateOfBirth").css("display", "none");
            });
            $('#Individual').click(function () {
                $('#hidden').css("display", "none");
                $("#DateOfBirth").css("display", "block");
            });
            $(".navbar").css("background", "#4c726f");
            $("#CountryId").addClass("form-control");

            $("#StateId").addClass("form-control");
            $("#CountryId").change(function () {
                // this will call when Country Dropdown select change
                var countryId = $("#CountryId").val();
                if (countryId != null) {
                    var ddState = $("#StateId");
                    ddState.empty(); // this line is for clear all items from State dropdown
                    ddState.append($("<option></option").val("").html("Select State"));

                    // Here I will call Controller Action via Jquery to load State for selected Country
                    $.ajax({
                        url: "@Url.Action("GetStates","Admin")",
                        type: "GET",
                    data: { countryId: countryId },
                    dataType: "json",
                    success: function (data) {
                        console.log(data);
                        $.each(data, function (i, val) {
                            ddState.append(
                                    $("<option></option>").val(val.StateId).html(val.StateName)
                                );
                        });
                    },
                    error: function () {
                        alert("Error!");
                    }
                });
            }
            });

            //for showing jquery calendar
            $("#DOB").datepicker({
                changeMonth: true,
                changeYear: true
            });
           
            //CKEDITOR.replace('AboutOrganization');
        });

    </script>
}
